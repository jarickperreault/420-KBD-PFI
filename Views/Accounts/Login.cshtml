@model PhotosManager.Models.LoginCredential

@{
    ViewBag.Title = "Connexion";

    string currentLoginEmail = Session["currentLoginEmail"] != null ? (string)Session["currentLoginEmail"] : "";
    string eventMessage = (string)Session["LoginMessage"];
    bool eventSuccess = (bool)Session["LoginSuccess"];
    string messageColor = eventSuccess ? "green" : "red";
    string alertIcon = eventSuccess ? "fa-solid fa-circle-exclamation" : "fa-triangle-exclamation";
}

<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.TimeZoneOffset)

    <div class="event-form">

        @if (eventMessage != "")
        {
            <fieldset>
                <legend><i class="fa-solid @alertIcon" style="color:@messageColor; font-size:20px;"></i></legend>
                <div style="display:inline-flex; align-items:center">
                    <span style="color:@messageColor">@eventMessage</span>
                </div>
            </fieldset>
        }

        <fieldset>
            <legend>Connexion</legend>
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Email) } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <div class="passwordLayout">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Password) } })
                @Helper.Icon("toggleShowPassword", "passwordShowIcon fa-eye", "Afficher/Masquer le mot de passe")
            </div>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            <input type="submit" value="Se connecter..." class="btn btn-primary" />
        </fieldset>
        @Html.ActionLink("S'enregistrer...", "Subscribe")
        @Html.ActionLink("Mot de passe oublié...", "RenewPasswordCommand")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(() => {
            //noTimeout();
            initSessionTimeout(1500 * 60 /*seconds*/);
            // Set client local time zone
            $("#TimeZoneOffset").val(new Date().getTimezoneOffset() / 60);

            if ($("#Password").val() == "")
                $("#toggleShowPassword").hide();
            else
                $("#toggleShowPassword").show();
            $("#toggleShowPassword").click(() => {
                $("#Password").attr("type", $("#Password").attr("type") == 'password' ? 'text' : 'password');
                $("#toggleShowPassword").toggleClass("fa-eye");
                $("#toggleShowPassword").toggleClass("fa-eye-slash");
            });
            $("#Password").keyup(() => {
                if ($("#Password").val() == "")
                    $("#toggleShowPassword").hide();
                else
                    $("#toggleShowPassword").show();
            })
        })
    </script>
}
